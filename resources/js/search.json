[[{"l":"Readme"}],[{"l":"Week 1: Your First Python Adventure \uD83D\uDC0D","p":["Welcome to coding! Today you're going to learn Python, one of the coolest programming languages out there."]},{"l":"What is Python?","p":["Python is a programming language that's used to build tons of stuff you probably use every day:","Instagram and YouTube","Netflix recommendations","Video games","Apps on your phone","The best part? Python is super beginner-friendly, so you'll be writing real code today!"]},{"l":"Getting Started with Replit","p":["We'll be using Replit to write our Python code. Think of it like Google Docs, but for coding. Everything saves automatically and you can access your projects from anywhere.","Your first task: Go to replit.com and create your account if you haven't already."]},{"l":"Your First Program: Hello World!","p":["Every programmer writes their first \"Hello World\" program. It's like a tradition! Here's how you do it in Python:","Type that into your Replit and hit the green \"Run\" button. Boom! You just wrote your first program.","Try this: Change \"Hello World!\" to something else. Maybe your name, your favorite food, or even \"I am awesome at coding!\""]},{"l":"Python as a Super Calculator","p":["One of the first things you'll notice about Python is that it's amazing at math. You can use it like a really smart calculator.","Here are the math symbols Python understands:","+ for adding","- for subtracting","* for multiplying","/ for dividing","Try these out in your Replit:","Challenge: Can you figure out what 15 // 4 does? Or 15 % 4? Try them and see!"]},{"l":"Making Your Code Make Sense","p":["As you write more code, you'll want to remember what different parts do. That's where comments come in handy. In Python, anything after a # is a comment - Python ignores it, but it helps you remember what you were thinking."]},{"l":"Important Python Rules","p":["Python is pretty chill, but it has a few rules you need to follow:","Spelling matters: print works, but Print doesn't","Parentheses matter: print(hello) works, print hello doesn't","Quotes matter: Text needs to be in quotes like this","Don't worry if you make mistakes - every programmer does! Python will tell you when something's wrong."]},{"l":"Practice Time!","p":["Here's what you're going to build today:","Create a program that:","Says hello to you by name","Tells us your favorite number","Does some math with that number (add, subtract, multiply, or divide it by something)","Has at least 3 comments explaining what your code does","Example:"]},{"l":"What's Next?","p":["Great job on your first day of coding! Next week we'll learn about variables - a way to store information so your programs can remember things and get even more awesome."]},{"l":"Need Help?","p":["Stuck on something? Here are some quick fixes:","Nothing happens when you run: Make sure you have print() around what you want to see","Red error text: Check your spelling and make sure you have quotes around text","Can't find the run button: It's the big green triangle at the top","Remember: making mistakes is how you learn to code. Every error is just Python helping you get better!"]}],[{"l":"Week 2: Making Your Programs Interactive \uD83D\uDCAC","p":["Last week you learned how to make Python print things. This week, we're going to make your programs way cooler by letting them talk back to you!"]},{"l":"Getting Input from Users","p":["Remember how you could only make Python say the same thing every time? That's about to change. Meet the input() function - it lets your program ask questions and wait for answers.","Try this:","Cool, right? But there's a problem - Python asks the question and then... forgets your answer. That's where variables come in!"]},{"l":"Variables: Python's Memory","p":["Think of variables like labeled boxes where Python can store information. Once you put something in a variable, Python remembers it until you change it or your program ends.","Here's how to create a variable:","The = sign doesn't mean \"equals\" like in math. It means \"store this value in this variable.\" So name = input(What's your name? ) means \"ask for the user's name and store their answer in a box labeled 'name'.\"","Try this: Create a program that asks for your favorite color and then tells you something cool about that color."]},{"l":"Different Types of Information","p":["Python is pretty smart about different types of information. Let's learn about the three main types:"]},{"l":"Strings (Text)","p":["Anything in quotes is a string - letters, numbers, symbols, whatever:"]},{"l":"Integers (Whole Numbers)","p":["These are regular counting numbers:"]},{"l":"Floats (Decimal Numbers)","p":["Numbers with decimal points:"]},{"l":"The input() Trick","p":["Here's something important: input() ALWAYS gives you back a string, even if someone types a number.","Try this and see what happens:","Did you get an error? That's because Python can't add a string (like \"13\") to a number (like 1). They're different types!"]},{"l":"Converting Types","p":["Don't worry - Python has tools to fix this. You can convert between types:","Or you can do it all in one line:","The conversion functions:","int()- converts to whole numbers","float()- converts to decimal numbers","str()- converts to text"]},{"l":"Making Dynamic Messages","p":["Now you can create programs that feel personal! Instead of printing the same thing every time, you can use variables to make custom messages:","You can also use variables in math:"]},{"l":"Practice Challenge: Personal Calculator","p":["Create a program that:","Asks for your name","Asks for two numbers","Adds those numbers together","Tells you the result using your name","Example run:","Bonus challenges:","Make it do subtraction, multiplication, or division too","Ask for their age and tell them how old they'll be in 10 years","Ask for the number of pets they have and tell them something fun about it"]},{"l":"Common Mistakes (Don't Worry, Everyone Makes These!)","p":["\"I can't add my numbers!\"","Remember: input() gives you strings, use int() to convert them","\"I get weird error messages\"","Check if you're trying to add strings and numbers together","Make sure you have quotes around text: hello not hello","\"My variable disappeared\"","Variables only exist inside your program - when it ends, they're gone","Make sure you spelled the variable name exactly the same way"]},{"l":"Why Variables Are Awesome","p":["Variables make your code:","Reusable: You can use the same value multiple times","Readable: name is clearer than Sarah scattered everywhere","Flexible: Change one variable and it updates everywhere"]},{"l":"What's Coming Next Week?","p":["Next week we'll learn about making decisions in your code - teaching Python to choose different paths based on what the user tells it. Get ready for if statements!"]},{"l":"Quick Reference"}],[{"l":"Week 3: Making Decisions and Building Functions \uD83C\uDFAF","p":["This week is where programming gets really exciting! You're going to teach your programs how to make decisions and create your own custom commands."]},{"l":"Teaching Python to Make Decisions","p":["Right now, your programs do the same thing every time. But what if you want Python to do different things based on what the user says? That's where if statements come in!"]},{"l":"Your First If Statement","p":["The if statement checks if something is true. If it is, Python runs the code underneath (notice how it's indented!). If not, Python skips it."]},{"l":"Comparison Operators (How Python Compares Things)","p":["Python uses special symbols to compare values:","== means \"exactly equal to\" (not just one =!)","!= means \"not equal to\"","means \"greater than\"","means \"less than\"","= means \"greater than or equal to\"","= means \"less than or equal to\"","Try this:"]},{"l":"Adding More Choices with elif and else","p":["What if you want multiple options? Use elif(which means \"else if\") and else:","The Rules:","You can have as many elif statements as you want","else is optional and always comes last","Python checks them in order and stops at the first true one"]},{"l":"Combining Conditions","p":["You can check multiple things at once using and and or:"]},{"l":"Practice: Choose Your Own Adventure","p":["Let's build a mini adventure game:","Your challenge: Expand this story! Add more choices, more if statements, and make it longer."]},{"l":"Functions: Creating Your Own Commands","p":["You know how print() and input() are commands that do specific things? You can create your own commands called functions!"]},{"l":"Your First Function","p":["The def keyword tells Python \"I'm creating a new function.\" Everything indented underneath is part of that function."]},{"l":"Functions with Parameters (Giving Functions Information)","p":["Functions become way more useful when you can give them information:","You can give functions multiple pieces of information:"]},{"l":"Functions That Give Back Answers (Return Values)","p":["Sometimes you want a function to calculate something and give you back the answer:"]},{"l":"Combining Functions and If Statements","p":["Here's where it gets really cool - you can put if statements inside functions:"]},{"l":"Scope: Where Variables Live","p":["Here's something important: variables inside functions stay inside functions (unless you return them):","Think of functions like separate rooms - what happens in the function room stays in the function room."]},{"l":"Practice Project: Personal Assistant","p":["Create a program with these functions:","A greeting function that asks for the user's name and welcomes them","A calculator function that takes two numbers and an operation (+, -, *, /)","A decision helper that helps them choose what to do based on the weather","Example structure:"]},{"l":"Why Functions Are Amazing","p":["Functions help you:","Avoid repetition: Write code once, use it many times","Stay organized: Break big problems into smaller pieces","Fix bugs easier: If something's wrong, you know exactly where to look","Work with others: Functions make it easy to share code"]},{"l":"Common Mistakes (And How to Fix Them)","p":["\"My if statement never works!\"","Remember: use == to compare, not =","Check your spelling exactly: yes is different from Yes","\"My function doesn't do anything\"","Make sure you're calling it: my_function() not just my_function","Check your indentation - everything in the function should be indented","\"I get an error about variables\"","Variables created inside functions can't be used outside them","Use return to get values out of functions"]},{"l":"Next Week Preview","p":["Next week we'll learn about loops - how to make Python do things over and over again without writing the same code 100 times. Get ready to build some seriously cool programs!"]},{"l":"Quick Reference"}]]